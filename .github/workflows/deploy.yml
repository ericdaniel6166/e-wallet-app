name: Deploy to production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

#      - name: Install kubectl
#        uses: azure/setup-kubectl@v1
#        with:
#          version: 'v1.21.3'
#        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

#      - name: Load secrets and save to app.env
#        run: aws secretsmanager get-secret-value --secret-id e_wallet_app --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: n0w1k7c7
          REPOSITORY: e-wallet-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

#      - name: Update kube config
#        run: aws eks update-kubeconfig --name simple-bank --region eu-west-1
#
#      - name: Deploy image to Amazon EKS
#        run: |
#          kubectl apply -f eks/aws-auth.yaml
#          kubectl apply -f eks/deployment.yaml
#          kubectl apply -f eks/service.yaml
#          kubectl apply -f eks/issuer.yaml
#          kubectl apply -f eks/ingress.yaml
